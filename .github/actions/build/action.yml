name: 'Maven Build'

description: 'Build the platform dependent Java library'

inputs:
  java-version:
    description: 'The Java build version.'
    required: true
    default: '17'

  platform-name:
    description: 'The target platform.'
    required: true

  maven-username:
    description: 'The Maven username.'
    required: true

  maven-password:
    description: 'The Maven password.'
    required: true

  gitlab-token:
    description: 'The GITLAB private token.'
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up WebRTC cache
      uses: actions/cache@v4
      with:
        path: ~/${{ env.WEBRTC_INSTALL_FOLDER }}
        key: webrtc-${{ env.WEBRTC_CACHE_BRANCH }}-${{ inputs.platform-name }}-${{ hashFiles('webrtc-jni/pom.xml') }}
        restore-keys: webrtc-${{ env.WEBRTC_CACHE_BRANCH }}-${{ inputs.platform-name }}-

    - name: Set up Maven cache
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: maven-${{ inputs.platform-name }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: maven-${{ inputs.platform-name }}-

    - name: Set up JDK ${{ inputs.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.java-version }}
        distribution: 'temurin'
        server-id: central
        server-username: MAVEN_USERNAME
        server-password: MAVEN_TOKEN

    - uses: s4u/maven-settings-action@v3.1.0
      with:
        servers: |
          [{
            "id": "gitlab-maven",
            "configuration": {
                "httpHeaders": {
                    "property" : {
                      "name": "Private-Token",
                      "value": "${{ inputs.gitlab-token }}"
                    }
                }
            }
          }]

    - name: Build
      run: |
        if [ "${{ inputs.platform-name }}" == "linux_arm" ]; then
          mvn package -DskipTests -Plinux-aarch32
        elif [ "${{ inputs.platform-name }}" == "linux_arm64" ]; then
          mvn package -DskipTests -Plinux-aarch64
        else
          mvn package -DskipTests
        fi
      shell: bash

    - name: Show current Dir
      run: ls -R
      shell: bash

    - name: Create Artifacts Dir
      run: mkdir artifacts && cp target/*.jar artifacts
      shell: bash

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: List Artifacts
      run: dir artifacts
      shell: bash

#    - name: Deploy
#      env:
#        MAVEN_USERNAME: ${{ inputs.maven-username }}
#        MAVEN_TOKEN: ${{ inputs.maven-password }}
#        GITLAB_TOKEN: ${{ inputs.gitlab-token }}
#      run: |
#        if [ "${{ inputs.platform-name }}" == "linux_arm" ]; then
#          mvn deploy -DskipTests -Plinux-aarch32 -s settings.xml
#        elif [ "${{ inputs.platform-name }}" == "linux_arm64" ]; then
#          mvn deploy -DskipTests -Plinux-aarch64 -s settings.xml
#        else
#          mvn deploy -DskipTests -s settings.xml
#        fi
#      shell: bash
